import numpy as np
import matplotlib.pyplot as plt

# Константы для расчетов
mu_0 = 4 * np.pi * 1e-7  # Магнитная проницаемость вакуума (H/m или T·m/A)
e = 1.602e-19  # Элементарный заряд (Кл)
m_e = 9.109e-31  # Масса электрона (кг)

# Параметры соленоида и диода, указанные в задаче
n = 100  # Число витков на единицу длины (1/м), предположим
Ra = 0.05  # Радиус анода (м)
Rk = 0.01  # Радиус катода (м)
U = 100  # Напряжение (В), задаем произвольное значение для примера

# Рассчитаем скорость электрона по формуле v = sqrt(2*U*e/m_e)
v = np.sqrt(2 * U * e / m_e)

# Радиус круговой траектории электрона r = m_e * v / (e * B)
# Из условия задачи, электрон описывает окружность диаметром (Ra-Rk), поэтому радиус траектории r = (Ra - Rk) / 2
r = (Ra - Rk) / 2

# Магнитное поле соленоида B для такой траектории
B = m_e * v / (e * r)

# Ток Ic, необходимый для создания такого магнитного поля
Ic = B / (mu_0 * n)

# Создадим массив напряжений от U1 до U2 для диаграммы
U1 = 10  # Начальное напряжение (В) для диаграммы
U2 = 200  # Конечное напряжение (В) для диаграммы
U_values = np.linspace(U1, U2, 200)

# Рассчитаем соответствующие значения тока Ic для каждого напряжения для диаграммы
Ic_values = (m_e * np.sqrt(2 * U_values * e / m_e) * 2 * r) / (e * mu_0 * n)

# Построение графика траектории электрона
theta = np.linspace(0, 2 * np.pi, 100)
x = r * np.cos(theta)
y = r * np.sin(theta)

# Визуализация траектории и диаграммы зависимости
fig, axs = plt.subplots(2, 1, figsize=(10, 12))

# Траектория электрона
axs[0].plot(x, y, label=f'Траектория при U={U}В и Ic={Ic:.2f}А')
axs[0].scatter([0], [0], color='red', label='Центр окружности траектории')
axs[0].set_xlabel('x (м)')
axs[0].set_ylabel('y (м)')
axs[0].set_title('Траектория движения электрона в соленоиде')
axs[0].legend()
axs[0].grid(True)
axs[0].axis('equal')
axs[0].legend(loc='upper left')

# Диаграмма зависимости Ic от U
axs[1].plot(U_values, Ic_values, label='Ic(U)')
axs[1].fill_between(U_values, 0, Ic_values, color='green', alpha=0.3, label='Область круговой траектории')
axs[1].set_title('Диаграмма зависимости Ic от U')
axs[1].set_xlabel('Напряжение U (В)')
axs[1].set_ylabel('Ток Ic (А)')
axs[1].legend()
axs[1].grid(True)

# Отображение графиков
plt.show()